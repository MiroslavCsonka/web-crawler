#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'nokogiri'
require 'restclient'

options = {}
option_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: web_parser [options]'

  opts.on('-u', '--url URL', 'Initial url from which to begin') do |url|
    options[:url] = url
  end

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end

begin
  option_parser.parse!
  raise OptionParser::MissingArgument, :url unless options[:url]
rescue OptionParser::InvalidOption, OptionParser::MissingArgument => e
  puts e.to_s
  puts option_parser
  exit(1)
end

def is_internal?(url, link)
  link['href'].start_with?(url, '/')
end

url = options.fetch(:url)
page = Nokogiri::HTML(RestClient.get(url))
links = page.css('a')
internal_links = links.select { |link| is_internal?(url, link) }
puts "Page contains #{internal_links.length} internal links"
